buildscript {
	dependencies {
		classpath 'org.postgresql:postgresql:42.7.5'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '9.21.0'
}

group = 'ru.improve'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

flyway {
	url = "jdbc:postgresql://${env.fetch('CREDIT_PG_HOST')}:${env.fetch('CREDIT_PG_PORT')}/${env.fetch('CREDIT_PG_DATABASE')}"
	user = env.fetch('CREDIT_PG_USER')
	password = env.fetch('CREDIT_PG_PASSWORD')
	locations = ['classpath:flyway/migrations']
	schemas = ['public']
	cleanDisabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'com.google.guava:guava:33.4.0-jre'

//	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

//	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
//	annotationProcessor 'org.hibernate.validator:hibernate-validator-annotation-processor:8.0.1.Final'

	implementation 'org.postgresql:postgresql:42.7.5'

	implementation 'org.mapstruct:mapstruct:1.6.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
